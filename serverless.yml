service: serverless-flask
package:
  exclude:
    - frontend/**
    - node_modules/**
    - .serverless/**
    - .git/**
    - '*.yml'
    - tests/**



plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

custom:
  tableName: 'notes-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
    usePipenv: true
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
      - test

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: quarantineNotesProfile
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["NotesDynamoDBTable", "Arn" ] }
  environment:
    NOTES_TABLE: ${self:custom.tableName}
    PWD: fakepwd


functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
        cors:
          origins:
            - https://quarantinenotes.com
      - http: ANY {proxy+}
        cors:
          origins:
            - https://quarantinenotes.com

resources:
  Resources:
    NotesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: noteId
            AttributeType: S
        KeySchema:
          -
            AttributeName: noteId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
      DeletionPolicy: Retain
      UpdateReplacePolicy: Retain

